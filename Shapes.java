/*
Rachel Rattay
SWENG 311
M10 -Shape Drawer
11/6/2014
*/
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Vector;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rachelrattay
 */
public class Shapes extends javax.swing.JFrame {
    /**
     * Creates new form Shapes
     */
    public Shapes() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lineButton1 = new LineButton();
        ovalButton1 = new OvalButton();
        ovalButton2 = new OvalButton();
        rectButton1 = new RectButton();
        rectButton2 = new RectButton();
        jToolBar1 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        lineButton2 = new LineButton();
        ovalButton3 = new OvalButton();
        rectButton3 = new RectButton();
        roundRectButton1 = new RoundRectButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        MyCanvas = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(214, 214));

        jToolBar1.setRollover(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Clear_Broom.png"))); // NOI18N
        jButton4.setToolTipText("Clear");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);
        jButton4.getAccessibleContext().setAccessibleName("Clear");

        lineButton2.setText("        ");
        lineButton2.setFocusable(false);
        lineButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lineButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lineButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(lineButton2);

        ovalButton3.setText("          ");
        ovalButton3.setFocusable(false);
        ovalButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ovalButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ovalButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ovalButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(ovalButton3);

        rectButton3.setText("          ");
        rectButton3.setFocusable(false);
        rectButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rectButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rectButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(rectButton3);

        roundRectButton1.setText("          ");
        roundRectButton1.setFocusable(false);
        roundRectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        roundRectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        roundRectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundRectButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(roundRectButton1);

        jCheckBox1.setText("Bold");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jCheckBox1);

        jCheckBox2.setText("Dashed");
        jCheckBox2.setFocusable(false);
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jCheckBox2);

        jButton1.setText("Print");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jSlider1.setBackground(new java.awt.Color(255, 0, 0));
        jSlider1.setMajorTickSpacing(50);
        jSlider1.setMaximum(255);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setToolTipText("");
        jSlider1.setValue(0);
        jSlider1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jSlider1.setOpaque(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jPanel2.add(jSlider1);

        jSlider2.setBackground(new java.awt.Color(0, 255, 0));
        jSlider2.setMajorTickSpacing(50);
        jSlider2.setMaximum(255);
        jSlider2.setMinorTickSpacing(10);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setValue(0);
        jSlider2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jSlider2.setOpaque(true);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jPanel2.add(jSlider2);

        jSlider3.setBackground(new java.awt.Color(0, 0, 255));
        jSlider3.setMajorTickSpacing(50);
        jSlider3.setMaximum(255);
        jSlider3.setMinorTickSpacing(10);
        jSlider3.setPaintLabels(true);
        jSlider3.setPaintTicks(true);
        jSlider3.setValue(0);
        jSlider3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jSlider3.setOpaque(true);
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });
        jPanel2.add(jSlider3);

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        MyCanvas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                MyCanvasMouseDragged(evt);
            }
        });
        MyCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MyCanvasMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MyCanvasMouseReleased(evt);
            }
        });
        MyCanvas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                MyCanvasComponentResized(evt);
            }
        });

        javax.swing.GroupLayout MyCanvasLayout = new javax.swing.GroupLayout(MyCanvas);
        MyCanvas.setLayout(MyCanvasLayout);
        MyCanvasLayout.setHorizontalGroup(
            MyCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );
        MyCanvasLayout.setVerticalGroup(
            MyCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 221, Short.MAX_VALUE)
        );

        getContentPane().add(MyCanvas, java.awt.BorderLayout.CENTER);

        jMenu2.setText("Edit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem1.setText("Clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Shape");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setText("Oval");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setText("Rectangle");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.META_MASK));
        jMenuItem4.setText("Rounded Rectangle");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem5.setText("Line");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int oldx, oldy, newx, newy, x, y, width, height;
    //arraylist to hold all drawn shapes
    ArrayList<Shape> al = new <Shape>ArrayList();
    
    Image fg, bg, cg;
    
   
    public void paint(Graphics g){
    
    super.paint(g);
    
   
    //copies bg onto the temp image cg
    Graphics cgg = cg.getGraphics();
    cgg.drawImage(bg, 0, 0, null);
       
    //resizes bg
    bg= MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());
    Graphics bgg = bg.getGraphics();
    
    //copies cg onto resized bg
    bgg.drawImage(cg, 0, 0, null);
    
    //resizes fg
    fg= MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());
   
    //only resizes height and width if new height and width are larger than original
    if(MyCanvas.getHeight() > cg.getHeight(null)){
        cg = MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());
    }
    if(MyCanvas.getHeight() > cg.getHeight(null)){
        cg = MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getWidth());
    }
    //displays background onto canvas
    Graphics mg = MyCanvas.getGraphics();
    mg.drawImage(bg,0,0,null);
       
     }
    
    /* the three sliders are used to determine the RGB color of each individual line drawn*/
    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(), jSlider2.getValue(), jSlider3.getValue()));
    }//GEN-LAST:event_jSlider3StateChanged

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(), jSlider2.getValue(), jSlider3.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(), jSlider2.getValue(), jSlider3.getValue()));
    }//GEN-LAST:event_jSlider2StateChanged

    private void MyCanvasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyCanvasMousePressed
       // TODO add your handling code here:
       //stores x and y coordinates of first mouse press
       
       oldx = evt.getX();
       oldy = evt.getY();
      
    /*set of if/else ifs to create new shape object if user continues to make multiple
       of the same shape without reclicking the buttons*/
    if (s instanceof Line){ s = new Line(); }
    else if (s instanceof Rectangle){ s = new Rectangle();}
    else if (s instanceof RoundedRectangle){ s = new RoundedRectangle(); }
    else if (s instanceof Oval){ s = new Oval();}
    // creates blank background and foreground images if there is not already one
        if (bg == null){
            bg = MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());
            fg = MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());
            cg = MyCanvas.createImage(MyCanvas.getWidth(), MyCanvas.getHeight());   
        }
    }//GEN-LAST:event_MyCanvasMousePressed

    //Default shape is a Line
    Shape s = new Line();  
    private void MyCanvasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyCanvasMouseReleased
        // TODO add your handling code here:
    //sets coordinates when mouse released to variables
    newx = evt.getX();
    newy = evt.getY();
       
    //creates background image
    Graphics bgg = bg.getGraphics();
    bgg.drawImage(fg, 0, 0, null);
    
    Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        
        BasicStroke bs = new BasicStroke(5);
        g2d.setStroke(bs);
        g2d.drawLine(oldx, oldy, newx, newy);
    }//GEN-LAST:event_MyCanvasMouseReleased

    private void lineButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineButton2ActionPerformed
        // TODO add your handling code here:
        //creates new shape subclass obj
        s = new Line();
        
    }//GEN-LAST:event_lineButton2ActionPerformed

    private void ovalButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ovalButton3ActionPerformed
        // TODO add your handling code here:
         //creates new shape subclass obj
        s = new Oval();
        
    }//GEN-LAST:event_ovalButton3ActionPerformed

    private void rectButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectButton3ActionPerformed
        // TODO add your handling code here:
         //creates new shape subclass obj
        s = new Rectangle();
        
    }//GEN-LAST:event_rectButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //calls paint
        repaint();
        //makes background and foreground and temp clear
        fg = null;
        bg = null;
        cg = null;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void roundRectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundRectButton1ActionPerformed
        // TODO add your handling code here:
         //creates new shape subclass obj
         s = new RoundedRectangle();
         
    }//GEN-LAST:event_roundRectButton1ActionPerformed

    private void MyCanvasComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MyCanvasComponentResized
    
    repaint();
    }//GEN-LAST:event_MyCanvasComponentResized

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //calls paint
        repaint();
         //makes background and foreground and temp clear
        fg = null;
        bg = null;
        cg = null;
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
         //creates new shape subclass obj
         s = new Rectangle();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        //creates new shape subclass obj
        s = new Oval();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        //creates new shape subclass obj
        s = new RoundedRectangle();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        //creates new shape subclass obj
        s= new Line();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void MyCanvasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyCanvasMouseDragged
        // TODO add your handling code here:
        
        Graphics fgg = fg.getGraphics();
        fgg.drawImage(bg,0,0, null);
        //sets RBB using dynamic binding to correct shape subclass 
        s.setRGB(jSlider1.getValue(), jSlider2.getValue(), jSlider3.getValue());
       
        //using dynamic binding, calls Shape type of the choosen shape subclass
        s.ShapeType(oldx, oldy, evt.getX(), evt.getY());
        
        //draws correct shape using dynamic binding
        s.draw(fgg);
        
        //draws fg onto canvas
        
        Graphics g = MyCanvas.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        
        BasicStroke bs = new BasicStroke(5);
        g2d.setStroke(bs);
        
        
        g2d.drawImage(fg, 0,0, null);
        
    }//GEN-LAST:event_MyCanvasMouseDragged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        
        BasicStroke bs = new BasicStroke(5);
        g2d.setStroke(bs);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Shapes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MyCanvas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JToolBar jToolBar1;
    private LineButton lineButton1;
    private LineButton lineButton2;
    private OvalButton ovalButton1;
    private OvalButton ovalButton2;
    private OvalButton ovalButton3;
    private RectButton rectButton1;
    private RectButton rectButton2;
    private RectButton rectButton3;
    private RoundRectButton roundRectButton1;
    // End of variables declaration//GEN-END:variables
}
